{
  "name": "example-mcp-server",
  "version": "0.0.1",
  "description": "Example MCP server using the latest libraries and patterns",
  "main": "src/server.ts",
  "engines": {
    "bun": ">=1.0.0"
  },
  "scripts": {
    "dev": "bun --watch src/server.ts",
    "start": "bun src/server.ts",
    "start:stdio": "bun src/stdio-server.ts",
    "start:http": "bun src/http-server.ts",
    "test": "bun src/test-client.ts",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "type-check": "bun --check src/server.ts",
    "clean": "rm -rf dist",
    "build": "bun build src/server.ts --outfile dist/server.js"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "llm",
    "ai",
    "context",
    "server"
  ],
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.0",
    "cors": "^2.8.5",
    "express": "^4.18.0",
    "zod": "^3.22.0"
  },
  "devDependencies": {
    "@types/cors": "^2.8.0",
    "@types/express": "^4.17.0",
    "@types/node": "^20.19.9",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.0.0",
    "tsx": "^4.0.0",
    "typescript": "^5.0.0"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE"
  ],
  "author": "CJ Avilla",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/cjavdev/mcp-demo.git"
  },
  "mcp": {
    "configSchema": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string",
          "description": "API key for external services"
        },
        "environment": {
          "type": "string",
          "enum": [
            "development",
            "production"
          ],
          "default": "development"
        },
        "features": {
          "type": "object",
          "properties": {
            "sampling": {
              "type": "boolean",
              "default": true
            },
            "elicitation": {
              "type": "boolean",
              "default": true
            }
          }
        }
      }
    }
  }
}
